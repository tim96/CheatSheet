security:
    encoders:
        FOS\UserBundle\Model\UserInterface:
            algorithm: bcrypt
            cost: 12

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    role_hierarchy:
        ROLE_API:    []
        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt|error)|css|images|js)/
            security: false

        admin:
            pattern:            /admin(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
                require_previous_session: false
            logout:
                path:           /admin/logout
            anonymous:          true

        #main:
        #    pattern:             .*
        #    context:             user
        #    form_login:
        #        provider:       fos_userbundle
        #        login_path:     /login
        #        use_forward:    false
        #        check_path:     /login_check
        #        failure_path:   null
        #        require_previous_session: false
        #    logout:
        #        path:           /logout
        #    anonymous:          true

        #wsse_secured:
        #    pattern:   ^/api/.*
        #    wsse:
        #        realm: "Secured with WSSE" #identifies the set of resources to which the authentication information will apply (WWW-Authenticate)
        #        profile: "UsernameToken" #WSSE profile (WWW-Authenticate)

        default:
            anonymous: ~

    access_control:

        # Admin login page needs to be access without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/api, role: [ROLE_API] }
        - { path: ^/api/login, role: [IS_AUTHENTICATED_ANONYMOUSLY] }
        - { path: ^/api/logout, role: [IS_AUTHENTICATED_ANONYMOUSLY] }

        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: [IS_AUTHENTICATED_ANONYMOUSLY] }

