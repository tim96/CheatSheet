<?php

namespace Tim\CheatSheetBundle\Entity;

/**
 * PostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostRepository extends \Doctrine\ORM\EntityRepository
{
    public function getPosts($isDeleted = false, $isJoinPostType = false, $isJoinTags = false)
    {
        $query = $this->getPostsQuery($isDeleted, $isJoinPostType, $isJoinTags);

        $data = $query->getQuery()->getResult();

        return $data ? $data : array();
    }

    public function getPostsAsArray($isDeleted = false, $isJoinPostType = false, $isJoinTags = false)
    {
        $query = $this->getPostsQuery($isDeleted, $isJoinPostType, $isJoinTags);

        $data = $query->getQuery()->getArrayResult();

        return $data ? $data : array();
    }

    public function getList($isDeleted = false, $isJoinPostType = false, $isJoinTags = false)
    {
        return $this->getPostsQuery($isDeleted, $isJoinPostType, $isJoinTags);
    }

    public function getListPosts($name, $isMain = false, $isDeleted = false, $maxResults = null,
                                 $isJoinPostType = false, $isJoinTags = false)
    {
        $query = $this->getPostsQuery($isDeleted, $isJoinPostType, $isJoinTags);

        if (is_bool($isMain)) {
            $query->andWhere('p.isMain = :isMain')
                ->setParameter('isMain', $isMain)
            ;
        }

        if (null !== $name) {
            $query->andWhere('p.text = :name')
                ->setParameter('name', $name)
                ->setMaxResults(1);
        } else {
            if (null !== $maxResults) {
                $query->setMaxResults((int)$maxResults);
            }
        }

        return $query->getQuery();
    }

    private function getPostsQuery($isDeleted, $isJoinPostType, $isJoinTags)
    {
        $query = $this->createQueryBuilder('p');
        if (is_bool($isDeleted)) {
            $query->andWhere('p.isDeleted = :isDeleted')
                ->setParameter('isDeleted', $isDeleted)
            ;
        }

        if (is_bool($isJoinPostType) && $isJoinPostType) {
            $query->addSelect('pt')
                ->leftJoin('p.postType', 'pt')
            ;
        }

        if (is_bool($isJoinTags) && $isJoinTags) {
            $query->addSelect('t')
                ->leftJoin('p.tags', 't')
            ;
        }

        return $query;
    }

}
